<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f5f5f5;
      color: #333;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }
    header {
      background-color: #2c3e50;
      color: white;
      padding: 20px;
      margin-bottom: 20px;
    }
    h1, h2, h3 {
      margin: 0;
    }
    .card {
      background-color: white;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      padding: 20px;
      margin-bottom: 20px;
    }
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 20px;
    }
    .stat-card {
      background-color: white;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      padding: 20px;
      text-align: center;
    }
    .stat-card h3 {
      margin-bottom: 10px;
      color: #555;
    }
    .stat-card .value {
      font-size: 36px;
      font-weight: bold;
      margin: 10px 0;
    }
    .stat-card.primary .value {
      color: #3498db;
    }
    .stat-card.warning .value {
      color: #f39c12;
    }
    .stat-card.success .value {
      color: #2ecc71;
    }
    .stat-card.danger .value {
      color: #e74c3c;
    }
    .chart-container {
      height: 300px;
      margin-bottom: 20px;
    }
    .activity-table {
      width: 100%;
      border-collapse: collapse;
    }
    .activity-table th, .activity-table td {
      padding: 12px 15px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }
    .activity-table th {
      background-color: #f2f2f2;
      font-weight: bold;
    }
    .activity-table tr:hover {
      background-color: #f5f5f5;
    }
    .nav {
      display: flex;
      background-color: #34495e;
      margin-bottom: 20px;
    }
    .nav a {
      color: white;
      text-decoration: none;
      padding: 15px 20px;
      transition: background-color 0.3s ease;
    }
    .nav a:hover {
      background-color: #2c3e50;
    }
    .nav a.active {
      background-color: #3498db;
    }
  </style>
  <script>
    // Simple chart rendering function
    function renderChart() {
      const ctx = document.getElementById('categoryChart').getContext('2d');
      
      // Data from server
      const categories = {
        'CG001': <%= stats.categories['CG001'] %>,
        'CG002': <%= stats.categories['CG002'] %>,
        'CG003': <%= stats.categories['CG003'] %>,
        'CG005': <%= stats.categories['CG005'] %>
      };
      
      // Chart dimensions
      const width = ctx.canvas.width;
      const height = ctx.canvas.height;
      const barWidth = width / 5;
      const maxValue = Math.max(...Object.values(categories));
      
      // Clear canvas
      ctx.clearRect(0, 0, width, height);
      
      // Draw bars
      let x = barWidth / 2;
      const colors = ['#3498db', '#2ecc71', '#f39c12', '#e74c3c'];
      const labels = ['영화', '드라마', '동영상 및 방송', '애니'];
      
      Object.entries(categories).forEach(([key, value], index) => {
        const barHeight = (value / maxValue) * (height - 60);
        
        // Draw bar
        ctx.fillStyle = colors[index];
        ctx.fillRect(x, height - barHeight - 30, barWidth - 20, barHeight);
        
        // Draw label
        ctx.fillStyle = '#333';
        ctx.font = '12px Arial';
        ctx.textAlign = 'center';
        ctx.fillText(labels[index], x + (barWidth - 20) / 2, height - 10);
        
        // Draw value
        ctx.fillText(value, x + (barWidth - 20) / 2, height - barHeight - 40);
        
        x += barWidth;
      });
    }
    
    window.onload = function() {
      renderChart();
    };
  </script>
</head>
<body>
  <header>
    <div class="container">
      <h1>모니터링 상태</h1>
      <p>fileis.com 웹하드 컨텐츠 모니터링 시스템 상태</p>
    </div>
  </header>
  
  <div class="container">
    <div class="nav">
      <a href="/">홈</a>
      <a href="/status" class="active">모니터링 상태</a>
      <a href="/monitoring">실시간 모니터링</a>
      <a href="/search">키워드 검색</a>
    </div>
    
    <div class="stats-grid">
      <div class="stat-card primary">
        <h3>총 모니터링 컨텐츠</h3>
        <div class="value"><%= stats.totalMonitored %></div>
      </div>
      
      <div class="stat-card warning">
        <h3>키워드 발견</h3>
        <div class="value"><%= stats.keywordFound %></div>
      </div>
      
      <div class="stat-card success">
        <h3>시스템 가용성</h3>
        <div class="value">100%</div>
      </div>
      
      <div class="stat-card danger">
        <h3>카테고리 수</h3>
        <div class="value">4</div>
      </div>
    </div>
    
    <div class="card">
      <h2>카테고리별 컨텐츠 수</h2>
      <div class="chart-container">
        <canvas id="categoryChart" width="1000" height="300"></canvas>
      </div>
    </div>
    
    <div class="card">
      <h2>최근 활동</h2>
      <table class="activity-table">
        <thead>
          <tr>
            <th>시간</th>
            <th>활동</th>
            <th>결과</th>
          </tr>
        </thead>
        <tbody>
          <% stats.recentActivity.forEach(activity => { %>
            <tr>
              <td><%= activity.timestamp %></td>
              <td><%= activity.action %></td>
              <td><%= activity.results %></td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
    
    <div class="card">
      <h2>실시간 모니터링</h2>
      <p>fileis.com 웹하드 사이트의 컨텐츠를 실시간으로 모니터링하고 키워드 "폭싹속았수다"가 포함된 컨텐츠를 검출합니다.</p>
      <p>모니터링 기능을 사용하려면 아래 버튼을 클릭하세요.</p>
      <a href="/monitoring" style="display: inline-block; padding: 10px 20px; background-color: #e74c3c; color: white; text-decoration: none; border-radius: 5px; margin-top: 10px;">실시간 모니터링 시작</a>
    </div>
  </div>
</body>
</html>
